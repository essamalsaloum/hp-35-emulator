const physicsConstants = {
  SPEED_OF_LIGHT: 'speed_of_light',
  ACCELERATION_OF_GRAVITY: 'acceleration_of_gravity',
  GRAVITATIONAL_CONSTANT: 'gravitational_constant',
  MOLAR_VOLUME_OF_IDEAL_GAS: 'molar_volume_of_ideal_gas',
  AVOGADRO_CONSTANT: 'Avogadro_constant',
  RYDBERG_CONSTANT: 'Rydberg_constant',
  ELEMENTARY_CHARGE: 'elementary_charge',
  ELECTRON_MASS: 'electron_mass',
  PROTON_MASS: 'proton_mass',
  NEUTRON_MASS: 'neutron_mass',
  MUON_MASS: 'muon_mass',
  BOLTZMAN_CONSTANT: 'Boltzman_constant',
  PLANCK_CONSTANT: 'Planck_constant',
  PLANCK_CONSTANT_OVER_2_PI: 'Planck_constant_over_2_pi',
  MAGNETIC_FLUX_QUANTUM: 'magnetic_flux_quantum',
  BOHR_RADIUS: 'Bohr_radius',
  ELECTRIC_CONSTANT: 'electric_constant',
  MOLAR_GAS_CONSTANT: 'molar_gas_constant',
  FARADAY_CONSTANT: 'Faraday_constant',
  ATOMIC_MASS_CONSTANT: 'atomic_mass_constant',
  MAGNETIC_CONSTANT: 'magnetic_constant',
  BOHR_MAGNETON: 'Bohr_magneton',
  NUCLEAR_MAGNETON: 'nuclear_magneton',
  PROTON_MAGNETIC_MOMENT: 'proton_magnetic_moment',
  ELECTRON_MAGNETIC_MOMENT: 'electron_magnetic_moment',
  NEUTRON_MAGNETIC_MOMENT: 'neutron_magnetic_moment',
  MUON_MAGNETIC_MOMENT: 'muon_magnetic_moment',
  CLASSICAL_ELECTRON_RADIUS: 'classical_electron_radius',
  IMPEDANCE_OF_FREE_SPACE: 'impedance_of_free_space',
  COMPTON_WAVELENGTH: 'Compton_wavelength',
  NEUTRON_COMPTON_WAVELENGTH: 'neutron_Compton_wavelength',
  PROTON_COMPTON_WAVELENGTH: 'proton_Compton_wavelength',
  FINE_STRUCTURE_CONSTANT: 'fine_structure_constant',
  STEFAN_BOLTZMAN_CONSTANT: 'Stefan_Boltzman_constant',
  CELSIUS_TEMPERATURE: 'Celsius_temperature',
  STANDARD_ATMOSPHERE: 'standard_atmosphere',
  PROTON_GYROMAGNETIC_RATIO: 'proton_gyromagnetic_ratio',
  FIRST_RADIATION_CONSTANT: 'first_radiation_constant',
  SECOND_RADIATION_CONSTANT: 'second_radiation_constant',
  CONDUCTANCE_QUANTUM: 'conductance_quantum',
  NATURAL_LOGARITHM_BASE_NUMBER: 'natural_logarithm_base_number'
}

const conversions = {
  IN2CM: 'in->cm',
  CM2IN: 'cm->in',
  FT2M: 'ft->m',
  M2FT: 'm->ft',
  MI2KM: 'mi->km',
  KM2MI: 'km->mi',
  YD2M: 'yd->m',
  M2YD: 'm->yd',
  LB2KG: 'lb->kg',
  KG2LB: 'kg->lb',
  OZ2G: 'oz->g',
  G2OZ: 'g->oz',
  C2F: 'c->f',
  F2C: 'f->c',
  GAL2L: 'gal->l',
  L2GAL: 'l->gal',
  DEG2RAD: 'DEG->RAD',
  RAD2DEG: 'RAD->DEG',
  HMS2FRAC: 'HMS->FRAC',
  FRAC2HMS: 'FRAC->HMS',
}

const memory = {
  MEM: 'MEM',
  STO: 'STO',
  MEM_CLR: 'MEM_CLR',
  MEM_CLR_ALL: 'MEM_CLR_ALL',
  STO_ADD: 'STO+',
  STO_SUB: 'STO-',
  STO_MUL: 'STO*',
  STO_DIV: 'STO/',
  RCL: 'RCL',
  RCL_ADD: 'RCL+',
  RCL_SUB: 'RCL-',
  RCL_MUL: 'RCL*',
  RCL_DIV: 'RCL/',
  MEM_SWAP: 'MEM<>',
}

const input = {
  CANCEL: 'CANCEL',
  CHS: 'CHS',
  D0: 'D0',
  D1: 'D1',
  D2: 'D2',
  D3: 'D3',
  D4: 'D4',
  D5: 'D5',
  D6: 'D6',
  D7: 'D7',
  D8: 'D8',
  D9: 'D9',
  DEL: 'DEL',
  DOT: 'DOT',
  EEX: 'EEX',
  PI: 'PI',
}

const stack = {
  CLR: 'CLR',
  ENTER: 'ENTER',
  LAST_X: 'LASTx',
  ROLL_DOWN: 'ROLLDOWN',
  SWAP: 'x<>y',
}

const math = {
  ACOS: 'ACOS',
  ACOSH: 'ACOSH',
  ALOG: '10^x',
  ASIN: 'ASIN',
  ASINH: 'ASINH',
  ADD: '+',
  ATAN: 'ATAN',
  ATANH: 'ATANH',
  COS: 'COS',
  COSH: 'COSH',
  DIV: '/',
  EXP: 'e^x',
  EXPM: 'EXPM',
  FACT: '!',
  FP: 'FP',
  IDIV: 'IDIV',
  IP: 'IP',
  INTG: 'INTG',
  INV: '1/x',
  LN: 'LN',
  LNP1: 'LNP1',
  LOG: 'LOG',
  MUL: '*',
  NCR: 'nCr',
  NPR: 'nPr',
  PCT: '%',
  PCTCHG: '%CHG',
  POW: 'y^x',
  SIN: 'SIN',
  SINH: 'SINH',
  SQ: 'x^2',
  SQRT: 'SQRT',
  SUB: '-',
  TAN: 'TAN',
  TANH: 'TANH',
  XROOT: 'XROOT',
}

const alphabet = {
  ALPHA_A: 'A',
  ALPHA_B: 'B',
  ALPHA_C: 'C',
  ALPHA_D: 'D',
  ALPHA_E: 'E',
  ALPHA_F: 'F',
  ALPHA_G: 'G',
  ALPHA_H: 'H',
  ALPHA_I: 'I',
  ALPHA_J: 'J',
  ALPHA_K: 'K',
  ALPHA_L: 'L',
  ALPHA_M: 'M',
  ALPHA_N: 'N',
  ALPHA_O: 'O',
  ALPHA_P: 'P',
  ALPHA_Q: 'Q',
  ALPHA_R: 'R',
  ALPHA_S: 'S',
  ALPHA_T: 'T',
  ALPHA_U: 'U',
  ALPHA_V: 'V',
  ALPHA_W: 'W',
  ALPHA_X: 'X',
  ALPHA_Y: 'Y',
  ALPHA_Z: 'Z',
}

export default {
  CONST: 'CONST',
  CONV: 'CONV',
  RESET: 'RESET',
  SHIFT_UP: 'SHIFTUP',
  SHIFT_DOWN: 'SHIFTDOWN',
  HYPER: 'HYPER',
  ALPHA: 'ALPHA',
  NOOP: 'NOOP',
  LBL: 'LBL',
  ABS: 'ABS',
  HMS2FRAC: 'HMS->FRAC',
  HELP: 'HELP',

  ...input,
  ...stack,
  ...memory,
  ...math,
  ...physicsConstants,
  ...conversions,
  ...alphabet
}
